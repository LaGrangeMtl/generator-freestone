#!/bin/bash

project=${PWD##*/}
branch=$(git symbolic-ref --short HEAD)
suggested_site_name="${project,,}.$branch.dev.enclos.ca"
suggested_site_name="$(echo $suggested_site_name | sed 's/wordpress-//')"


if [ -z "$1" ] ; then
	read -r  -p "Enter a domain for this site: " -i "$suggested_site_name" -e site
else
	site="$1"
fi

if [ -z "$2" ] ; then
	read -r  -p "Enter a DocumentRoot : " -i "dist" -e vhost_root
else
	vhost_root="$2"
fi

vhost_root_public_html="$(echo $vhost_root | sed 's/dist/public_html/')"

echo Updating /etc/hosts...
ipv6=::1
ip=127.0.0.1
if grep -q "$site$" /etc/hosts ; then
	sudo sed -i "/\w$site$/ s/.*/$ip\t$site/g" /etc/hosts
else
	echo "$ipv6	$site" | sudo tee -a /etc/hosts > /dev/null
	echo "$ip	$site" | sudo tee -a /etc/hosts > /dev/null
fi

echo Copying SSL related files from dev.enclos.ca...
mkdir -p .ssl
root_certs="/etc/letsencrypt/live/$site"
# shellcheck disable=SC2087
ssh dev.enclos.ca bash <<EOF
sudo su root
host="<VirtualHost *:80>
	ServerName ${site}
	DocumentRoot /var/www/${site}/${vhost_root_public_html}
	ServerAlias ca.${site}
	ServerAlias us.${site}
	ServerAlias uk.${site}
	ServerAlias www.${site}
	ServerAlias icitte.${site}
	ServerAlias ca.icitte.${site}
	ServerAlias uk.icitte.${site}
	ServerAlias us.icitte.${site}
	ErrorLog \${APACHE_LOG_DIR}/error.log
	CustomLog \${APACHE_LOG_DIR}/access.log combined
	Alias /robots.txt /var/www/html/robots.txt
	<Directory /var/www/${site}/${vhost_root_public_html}>
		AllowOverride All
	</Directory>
</VirtualHost>";
if [ ! -d "$root_certs" ]; then
	echo "\$host" | sudo tee /etc/apache2/sites-available/"$site".conf > /dev/null
	a2ensite "$site".conf > /dev/null
	sudo certbot run -d ${site} -d www.${site} -d ca.icitte.${site} -d uk.icitte.${site} -d us.icitte.${site} -d icitte.${site} -d ca.${site} -d us.${site} -d uk.${site} -n --apache --redirect --expand 2>&1
fi
exit
user_certs="/home/\$USER/.ssl/$site"
mkdir -p "\$user_certs"
sudo cp "$root_certs/fullchain.pem" "\$user_certs/fullchain.pem"
sudo cp "$root_certs/privkey.pem" "\$user_certs/privkey.pem"
sudo chown \$USER:\$USER -R \$user_certs
sudo chmod 700 -R \$user_certs
EOF
scp dev.enclos.ca:/etc/letsencrypt/options-ssl-apache.conf ./.ssl/options-ssl-apache.conf > /dev/null
scp dev.enclos.ca:"~/.ssl/$site/fullchain.pem" ./.ssl/fullchain.pem > /dev/null
scp dev.enclos.ca:"~/.ssl/$site/privkey.pem" ./.ssl/privkey.pem > /dev/null


echo Adding vhost...
host="# Generated by install.sh
<VirtualHost *:80>
	ServerName $site
	ServerAlias ca.${site}
	ServerAlias us.${site}
	ServerAlias uk.${site}
	ServerAlias www.${site}
	ServerAlias icitte.${site}
	ServerAlias ca.icitte.${site}
	ServerAlias uk.icitte.${site}
	ServerAlias us.icitte.${site}
	DocumentRoot $(pwd)/$vhost_root
	<Directory $(pwd)/$vhost_root>
		AllowOverride All
	</Directory>
</VirtualHost>
<VirtualHost *:443>
	ServerName $site
	ServerAlias $alias
	DocumentRoot $(pwd)/$vhost_root
	<Directory $(pwd)/$vhost_root>
		AllowOverride All
	</Directory>
	Include $(pwd)/.ssl/options-ssl-apache.conf
	SSLCertificateFile \"$(pwd)/.ssl/fullchain.pem\"
	SSLCertificateKeyFile \"$(pwd)/.ssl/privkey.pem\"
</VirtualHost>";
echo "$host" | sudo tee /etc/apache2/sites-available/"$site".conf > /dev/null


echo Enabling site...
if [ -f a2ensite ]; then
	sudo a2ensite "$site".conf > /dev/null
else
	sudo ln -s /etc/apache2/sites-available/"$site".conf /etc/apache2/sites-enabled/
fi


echo Restarting apache2...
if [ -f service ]; then
	sudo service apache2 restart > /dev/null
else
	sudo apachectl -k restart
fi


echo Done! Try it out! : https://"$site"


