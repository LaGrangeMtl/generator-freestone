#!/bin/bash

project=${PWD##*/}
branch=$(git symbolic-ref --short HEAD)
suggested_site_name="${project,,}.$branch.local.enclos.ca"

if [ -z "$1" ] ; then
	read -r  -p "Enter a domain for this site: " -i "$suggested_site_name" -e site
else
	site="$1"
fi

if [ -z "$2" ] ; then
	read -r  -p "Enter a DocumentRoot : " -i "/dist" -e root
else
	root="$2"
fi

alias="www.$site"

echo Updating /etc/hosts...
ip=::1
if grep -q "$site$" /etc/hosts ; then
	sudo sed -i "/\w$site$/ s/.*/$ip\t$site/g" /etc/hosts
else
	echo "$ip	$site" | sudo tee -a /etc/hosts > /dev/null
fi
if grep -q "$alias$" /etc/hosts ; then
	sudo sed -i "/\w$alias$/ s/.*/$ip\t$alias/g" /etc/hosts
else
	echo "$ip	$alias" | sudo tee -a /etc/hosts > /dev/null
fi

echo Copying SSL related files from local.enclos.ca...
mkdir -p ssl
root_certs="/etc/letsencrypt/live/$site"
# shellcheck disable=SC2087
ssh local.enclos.ca bash <<EOF
sudo su root
host="# Generated by install.sh
<VirtualHost *:80>
	ServerName $site
	ServerAlias $alias
	DocumentRoot /var/www/$site/$root
	<Directory /var/www/$site/$root>
		AllowOverride All
	</Directory>
</VirtualHost>"
if [ ! -d "$root_certs" ]; then
	echo "\$host" | sudo tee /etc/apache2/sites-available/"$site".conf > /dev/null
	a2ensite "$site".conf > /dev/null
    ./certbot-auto run -d $site -d www.$site -n --apache --redirect --expand
fi
exit
user_certs="/home/\$USER/ssl/$site"
mkdir -p "\$user_certs"
sudo cp "$root_certs/fullchain.pem" "\$user_certs/fullchain.pem"
sudo cp "$root_certs/privkey.pem" "\$user_certs/privkey.pem"
sudo chown \$USER:\$USER -R /home/\$USER/ssl/$site
sudo chmod 700 -R /home/\$USER/ssl/$site
EOF
scp local.enclos.ca:/etc/letsencrypt/options-ssl-apache.conf ./ssl/options-ssl-apache.conf > /dev/null
scp local.enclos.ca:"~/ssl/$site/fullchain.pem" ./ssl/fullchain.pem > /dev/null
scp local.enclos.ca:"~/ssl/$site/privkey.pem" ./ssl/privkey.pem > /dev/null

echo Adding vhost...
host="# Generated by install.sh
<VirtualHost *:80>
	ServerName $site
	ServerAlias $alias
	DocumentRoot $(pwd)/$root
	<Directory $(pwd)/$root>
		AllowOverride All
	</Directory>
</VirtualHost>
<VirtualHost *:443>
	ServerName $site
	ServerAlias $alias
	DocumentRoot $(pwd)/$root
	<Directory $(pwd)/$root>
		AllowOverride All
	</Directory>
	Include $(pwd)/ssl/options-ssl-apache.conf
    SSLCertificateFile \"$(pwd)/ssl/fullchain.pem\"
    SSLCertificateKeyFile \"$(pwd)/ssl/privkey.pem\"
</VirtualHost>";
echo "$host" | sudo tee /etc/apache2/sites-available/"$site".conf > /dev/null

echo Enabling site...
sudo a2ensite "$site".conf > /dev/null

echo Restarting apache2...
sudo service apache2 restart > /dev/null

echo Done! Try it out! : https://"$site"


